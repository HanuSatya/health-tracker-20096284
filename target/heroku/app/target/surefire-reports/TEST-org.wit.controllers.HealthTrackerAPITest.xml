<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.wit.controllers.HealthTrackerAPITest" time="16.407" tests="24" errors="11" skipped="0" failures="11">
  <properties>
    <property name="java.specification.version" value="16"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\agile-project\HealthTrackerAppRest\target\test-classes;C:\agile-project\HealthTrackerAppRest\target\classes;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-stdlib\1.3.72\kotlin-stdlib-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.3.72\kotlin-stdlib-common-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-test-junit\1.3.72\kotlin-test-junit-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-test-annotations-common\1.3.72\kotlin-test-annotations-common-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-test\1.3.72\kotlin-test-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-test-common\1.3.72\kotlin-test-common-1.3.72.jar;C:\Users\m2custom\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\m2custom\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\m2custom\repository\org\junit\jupiter\junit-jupiter-engine\5.5.2\junit-jupiter-engine-5.5.2.jar;C:\Users\m2custom\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-engine\1.5.2\junit-platform-engine-1.5.2.jar;C:\Users\m2custom\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-commons\1.5.2\junit-platform-commons-1.5.2.jar;C:\Users\m2custom\repository\org\junit\jupiter\junit-jupiter-api\5.5.2\junit-jupiter-api-5.5.2.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-runner\1.5.2\junit-platform-runner-1.5.2.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-launcher\1.5.2\junit-platform-launcher-1.5.2.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-suite-api\1.5.2\junit-platform-suite-api-1.5.2.jar;C:\Users\m2custom\repository\io\javalin\javalin\3.7.0\javalin-3.7.0.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.3.61\kotlin-stdlib-jdk8-1.3.61.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.3.61\kotlin-stdlib-jdk7-1.3.61.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-server\9.4.25.v20191220\jetty-server-9.4.25.v20191220.jar;C:\Users\m2custom\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-http\9.4.25.v20191220\jetty-http-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-util\9.4.25.v20191220\jetty-util-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-io\9.4.25.v20191220\jetty-io-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-webapp\9.4.25.v20191220\jetty-webapp-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-xml\9.4.25.v20191220\jetty-xml-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-servlet\9.4.25.v20191220\jetty-servlet-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-security\9.4.25.v20191220\jetty-security-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-server\9.4.25.v20191220\websocket-server-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-common\9.4.25.v20191220\websocket-common-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-api\9.4.25.v20191220\websocket-api-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-client\9.4.25.v20191220\websocket-client-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-client\9.4.25.v20191220\jetty-client-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-servlet\9.4.25.v20191220\websocket-servlet-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\slf4j\slf4j-api\1.8.0-beta4\slf4j-api-1.8.0-beta4.jar;C:\Users\m2custom\repository\org\slf4j\slf4j-simple\1.8.0-beta4\slf4j-simple-1.8.0-beta4.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\core\jackson-databind\2.10.1\jackson-databind-2.10.1.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.1\jackson-annotations-2.10.1.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\core\jackson-core\2.10.1\jackson-core-2.10.1.jar;C:\Users\m2custom\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\module\jackson-module-kotlin\2.8.8\jackson-module-kotlin-2.8.8.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-reflect\1.1.1\kotlin-reflect-1.1.1.jar;C:\Users\m2custom\repository\org\jetbrains\exposed\exposed\0.11.2\exposed-0.11.2.jar;C:\Users\m2custom\repository\joda-time\joda-time\2.9.9\joda-time-2.9.9.jar;C:\Users\m2custom\repository\org\postgresql\postgresql\42.2.2\postgresql-42.2.2.jar;C:\Users\m2custom\repository\com\konghq\unirest-java\3.7.02\unirest-java-3.7.02.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpclient\4.5.11\httpclient-4.5.11.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\m2custom\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\m2custom\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpmime\4.5.11\httpmime-4.5.11.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpcore-nio\4.4.13\httpcore-nio-4.4.13.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpasyncclient\4.1.4\httpasyncclient-4.1.4.jar;C:\Users\m2custom\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;C:\Users\m2custom\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\m2custom\repository\org\webjars\npm\vue\2.6.10\vue-2.6.10.jar;C:\Users\m2custom\repository\org\webjars\npm\axios\0.19.2\axios-0.19.2.jar;C:\Users\m2custom\repository\org\webjars\npm\follow-redirects\1.5.10\follow-redirects-1.5.10.jar;C:\Users\m2custom\repository\org\webjars\npm\debug\3.1.0\debug-3.1.0.jar;C:\Users\m2custom\repository\org\webjars\npm\ms\2.0.0\ms-2.0.0.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.8.7\jackson-datatype-joda-2.8.7.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/London"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="16"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="C:\dev-agile\Java\jdk-16.0.2\bin"/>
    <property name="sun.java.command" value="C:\Users\HANUSA~1\AppData\Local\Temp\surefire15823296315843526582\surefirebooter67190014628869553.jar C:\Users\Hanu Sathya\AppData\Local\Temp\surefire15823296315843526582 2022-01-05T09-37-21_617-jvmRun1 surefire5435909087180848110tmp surefire_016295595279022894717tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\agile-project\HealthTrackerAppRest\target\test-classes;C:\agile-project\HealthTrackerAppRest\target\classes;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-stdlib\1.3.72\kotlin-stdlib-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.3.72\kotlin-stdlib-common-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-test-junit\1.3.72\kotlin-test-junit-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-test-annotations-common\1.3.72\kotlin-test-annotations-common-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-test\1.3.72\kotlin-test-1.3.72.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-test-common\1.3.72\kotlin-test-common-1.3.72.jar;C:\Users\m2custom\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\m2custom\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\m2custom\repository\org\junit\jupiter\junit-jupiter-engine\5.5.2\junit-jupiter-engine-5.5.2.jar;C:\Users\m2custom\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-engine\1.5.2\junit-platform-engine-1.5.2.jar;C:\Users\m2custom\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-commons\1.5.2\junit-platform-commons-1.5.2.jar;C:\Users\m2custom\repository\org\junit\jupiter\junit-jupiter-api\5.5.2\junit-jupiter-api-5.5.2.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-runner\1.5.2\junit-platform-runner-1.5.2.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-launcher\1.5.2\junit-platform-launcher-1.5.2.jar;C:\Users\m2custom\repository\org\junit\platform\junit-platform-suite-api\1.5.2\junit-platform-suite-api-1.5.2.jar;C:\Users\m2custom\repository\io\javalin\javalin\3.7.0\javalin-3.7.0.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.3.61\kotlin-stdlib-jdk8-1.3.61.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.3.61\kotlin-stdlib-jdk7-1.3.61.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-server\9.4.25.v20191220\jetty-server-9.4.25.v20191220.jar;C:\Users\m2custom\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-http\9.4.25.v20191220\jetty-http-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-util\9.4.25.v20191220\jetty-util-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-io\9.4.25.v20191220\jetty-io-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-webapp\9.4.25.v20191220\jetty-webapp-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-xml\9.4.25.v20191220\jetty-xml-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-servlet\9.4.25.v20191220\jetty-servlet-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-security\9.4.25.v20191220\jetty-security-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-server\9.4.25.v20191220\websocket-server-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-common\9.4.25.v20191220\websocket-common-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-api\9.4.25.v20191220\websocket-api-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-client\9.4.25.v20191220\websocket-client-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\jetty-client\9.4.25.v20191220\jetty-client-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\eclipse\jetty\websocket\websocket-servlet\9.4.25.v20191220\websocket-servlet-9.4.25.v20191220.jar;C:\Users\m2custom\repository\org\slf4j\slf4j-api\1.8.0-beta4\slf4j-api-1.8.0-beta4.jar;C:\Users\m2custom\repository\org\slf4j\slf4j-simple\1.8.0-beta4\slf4j-simple-1.8.0-beta4.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\core\jackson-databind\2.10.1\jackson-databind-2.10.1.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.1\jackson-annotations-2.10.1.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\core\jackson-core\2.10.1\jackson-core-2.10.1.jar;C:\Users\m2custom\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\module\jackson-module-kotlin\2.8.8\jackson-module-kotlin-2.8.8.jar;C:\Users\m2custom\repository\org\jetbrains\kotlin\kotlin-reflect\1.1.1\kotlin-reflect-1.1.1.jar;C:\Users\m2custom\repository\org\jetbrains\exposed\exposed\0.11.2\exposed-0.11.2.jar;C:\Users\m2custom\repository\joda-time\joda-time\2.9.9\joda-time-2.9.9.jar;C:\Users\m2custom\repository\org\postgresql\postgresql\42.2.2\postgresql-42.2.2.jar;C:\Users\m2custom\repository\com\konghq\unirest-java\3.7.02\unirest-java-3.7.02.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpclient\4.5.11\httpclient-4.5.11.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\m2custom\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\m2custom\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpmime\4.5.11\httpmime-4.5.11.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpcore-nio\4.4.13\httpcore-nio-4.4.13.jar;C:\Users\m2custom\repository\org\apache\httpcomponents\httpasyncclient\4.1.4\httpasyncclient-4.1.4.jar;C:\Users\m2custom\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;C:\Users\m2custom\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\m2custom\repository\org\webjars\npm\vue\2.6.10\vue-2.6.10.jar;C:\Users\m2custom\repository\org\webjars\npm\axios\0.19.2\axios-0.19.2.jar;C:\Users\m2custom\repository\org\webjars\npm\follow-redirects\1.5.10\follow-redirects-1.5.10.jar;C:\Users\m2custom\repository\org\webjars\npm\debug\3.1.0\debug-3.1.0.jar;C:\Users\m2custom\repository\org\webjars\npm\ms\2.0.0\ms-2.0.0.jar;C:\Users\m2custom\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.8.7\jackson-datatype-joda-2.8.7.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Hanu Sathya"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2021-07-20"/>
    <property name="java.home" value="C:\dev-agile\Java\jdk-16.0.2"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\agile-project\HealthTrackerAppRest"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\HANUSA~1\AppData\Local\Temp\surefire15823296315843526582\surefirebooter67190014628869553.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="16.0.2+7-67"/>
    <property name="user.name" value="Hanu Sathya"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\m2custom\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\HANUSA~1\AppData\Local\Temp\"/>
    <property name="idea.version" value="2021.2.3"/>
    <property name="java.version" value="16.0.2"/>
    <property name="user.dir" value="C:\agile-project\HealthTrackerAppRest"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\dev-agile\Java\jdk-16.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Bitvise SSH Client;C:\dev-agile\Java\jdk-16.0.2\bin;C:\dev-agile\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.8.4-bin\apache-maven-3.8.4\bin;C:\Users\Hanu Sathya\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Java\jdk1.8.0_212\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3\bin;;C:\Users\Hanu Sathya\AppData\Local\Programs\Microsoft VS Code\bin;C:\dev-agile\IntelliJ IDEA 2021.2.3\bin;;C:\Users\Hanu Sathya\AppData\Roaming\npm;C:\Program Files\heroku\bin;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="16.0.2+7-67"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="60.0"/>
  </properties>
  <testcase name="add a user with correct details returns a 201 response" classname="org.wit.controllers.HealthTrackerAPITest$CreateUsers" time="1.496">
    <failure message="expected:&lt;201&gt; but was:&lt;500&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<201> but was:<500>
	at org.wit.controllers.HealthTrackerAPITest$CreateUsers.add a user with correct details returns a 201 response(HealthTrackerAPITest.kt:47)
]]></failure>
    <system-err><![CDATA[[main] INFO org.eclipse.jetty.util.log - Logging initialized @1041ms to org.eclipse.jetty.util.log.Slf4jLog
[main] INFO io.javalin.Javalin - 
           __                      __ _
          / /____ _ _   __ ____ _ / /(_)____
     __  / // __ `/| | / // __ `// // // __ \
    / /_/ // /_/ / | |/ // /_/ // // // / / /
    \____/ \__,_/  |___/ \__,_//_//_//_/ /_/

        https://javalin.io/documentation

[main] INFO io.javalin.Javalin - Starting Javalin ...
[main] INFO io.javalin.Javalin - Listening on http://localhost:7000/
[main] INFO io.javalin.Javalin - Javalin started in 353ms \o/
[qtp1946988038-26] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="get all users from the database returns 200 or 404 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadUsers" time="2.223"/>
  <testcase name="get user by id when user does not exist returns 404 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadUsers" time="1.085">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$ReadUsers.get user by id when user does not exist returns 404 response(HealthTrackerAPITest.kt:86)
]]></failure>
  </testcase>
  <testcase name="getting a user by email when email exists, returns a 200 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadUsers" time="1.082">
    <error message="No content to map due to end-of-input&#10; at [Source: (String)&quot;&quot;; line: 1, column: 0]" type="com.fasterxml.jackson.databind.exc.MismatchedInputException">com.fasterxml.jackson.databind.exc.MismatchedInputException: 
No content to map due to end-of-input
 at [Source: (String)""; line: 1, column: 0]
	at org.wit.controllers.HealthTrackerAPITest$ReadUsers.getting a user by email when email exists, returns a 200 response(HealthTrackerAPITest.kt:524)
</error>
    <system-err><![CDATA[[qtp1946988038-24] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="getting a user by id when id exists, returns a 200 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadUsers" time="0.029">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$ReadUsers.getting a user by id when id exists, returns a 200 response(HealthTrackerAPITest.kt:102)
</error>
    <system-err><![CDATA[[qtp1946988038-24] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="get user by email when user does not exist returns 404 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadUsers" time="1.077">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$ReadUsers.get user by email when user does not exist returns 404 response(HealthTrackerAPITest.kt:94)
]]></failure>
  </testcase>
  <testcase name="updating a user when it exists, returns a 204 response" classname="org.wit.controllers.HealthTrackerAPITest$UpdateUsers" time="0.04">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$UpdateUsers.updating a user when it exists, returns a 204 response(HealthTrackerAPITest.kt:135)
</error>
    <system-err><![CDATA[[qtp1946988038-24] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="updating a user when it doesn&apos;t exist, returns a 404 response" classname="org.wit.controllers.HealthTrackerAPITest$UpdateUsers" time="0.019">
    <failure message="expected:&lt;404&gt; but was:&lt;500&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<500>
	at org.wit.controllers.HealthTrackerAPITest$UpdateUsers.updating a user when it doesn't exist, returns a 404 response(HealthTrackerAPITest.kt:154)
]]></failure>
    <system-err><![CDATA[[qtp1946988038-25] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"abs", "email":"kasdko@gmail.com"}"; line: 1, column: 42] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.updateUser(HealthTrackerAPI.kt:176)
	at org.wit.config.JavalinConfig$registerRoutes$1$12.invoke(JavalinConfig.kt:41)
	at org.wit.config.JavalinConfig$registerRoutes$1$12.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="deleting a user when it doesn&apos;t exist, returns a 404 response" classname="org.wit.controllers.HealthTrackerAPITest$DeleteUsers" time="1.039">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$DeleteUsers.deleting a user when it doesn't exist, returns a 404 response(HealthTrackerAPITest.kt:163)
]]></failure>
  </testcase>
  <testcase name="deleting a user when it exists, returns a 204 response" classname="org.wit.controllers.HealthTrackerAPITest$DeleteUsers" time="0.023">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$DeleteUsers.deleting a user when it exists, returns a 204 response(HealthTrackerAPITest.kt:171)
</error>
    <system-err><![CDATA[[qtp1946988038-25] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="add an activity when no user exists for it, returns a 404 response" classname="org.wit.controllers.HealthTrackerAPITest$CreateActivities" time="1.056">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$CreateActivities.add an activity when no user exists for it, returns a 404 response(HealthTrackerAPITest.kt:207)
]]></failure>
  </testcase>
  <testcase name="add an activity when a user exists for it, returns a 201 response" classname="org.wit.controllers.HealthTrackerAPITest$CreateActivities" time="0.029">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$CreateActivities.add an activity when a user exists for it, returns a 201 response(HealthTrackerAPITest.kt:190)
</error>
    <system-err><![CDATA[[qtp1946988038-25] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="get all activities by user id when no user exists returns 404 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadActivities" time="1.029">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$ReadActivities.get all activities by user id when no user exists returns 404 response(HealthTrackerAPITest.kt:275)
]]></failure>
  </testcase>
  <testcase name="get activity by activity id when no activity exists returns 404 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadActivities" time="1.057">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$ReadActivities.get activity by activity id when no activity exists returns 404 response(HealthTrackerAPITest.kt:284)
]]></failure>
  </testcase>
  <testcase name="get all activities by user id when no activities exist returns 404 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadActivities" time="0.031">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$ReadActivities.get all activities by user id when no activities exist returns 404 response(HealthTrackerAPITest.kt:258)
</error>
    <system-err><![CDATA[[qtp1946988038-24] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="get all activities from the database returns 200 or 404 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadActivities" time="1.12"/>
  <testcase name="get all activities by user id when user and activities exists returns 200 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadActivities" time="0.022">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$ReadActivities.get all activities by user id when user and activities exists returns 200 response(HealthTrackerAPITest.kt:237)
</error>
    <system-err><![CDATA[[qtp1946988038-24] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="get activity by activity id when activity exists returns 200 response" classname="org.wit.controllers.HealthTrackerAPITest$ReadActivities" time="0.021">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$ReadActivities.get activity by activity id when activity exists returns 200 response(HealthTrackerAPITest.kt:291)
</error>
    <system-err><![CDATA[[qtp1946988038-25] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="updating an activity by activity id when it exists, returns 204 response" classname="org.wit.controllers.HealthTrackerAPITest$UpdateActivities" time="0.038">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$UpdateActivities.updating an activity by activity id when it exists, returns 204 response(HealthTrackerAPITest.kt:328)
</error>
    <system-err><![CDATA[[qtp1946988038-24] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="updating an activity by activity id when it doesn&apos;t exist, returns a 404 response" classname="org.wit.controllers.HealthTrackerAPITest$UpdateActivities" time="1.008">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$UpdateActivities.updating an activity by activity id when it doesn't exist, returns a 404 response(HealthTrackerAPITest.kt:317)
]]></failure>
  </testcase>
  <testcase name="deleting an activity by activity id when it doesn&apos;t exist, returns a 404 response" classname="org.wit.controllers.HealthTrackerAPITest$DeleteActivities" time="1.08">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$DeleteActivities.deleting an activity by activity id when it doesn't exist, returns a 404 response(HealthTrackerAPITest.kt:361)
]]></failure>
  </testcase>
  <testcase name="deleting all activities by userid when it exists, returns a 204 response" classname="org.wit.controllers.HealthTrackerAPITest$DeleteActivities" time="0.032">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$DeleteActivities.deleting all activities by userid when it exists, returns a 204 response(HealthTrackerAPITest.kt:391)
</error>
    <system-err><![CDATA[[qtp1946988038-25] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
  <testcase name="deleting activities by user id when it doesn&apos;t exist, returns a 404 response" classname="org.wit.controllers.HealthTrackerAPITest$DeleteActivities" time="1.041">
    <failure message="expected:&lt;404&gt; but was:&lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
	at org.wit.controllers.HealthTrackerAPITest$DeleteActivities.deleting activities by user id when it doesn't exist, returns a 404 response(HealthTrackerAPITest.kt:367)
]]></failure>
  </testcase>
  <testcase name="deleting an activity by id when it exists, returns a 204 response" classname="org.wit.controllers.HealthTrackerAPITest$DeleteActivities" time="0.03">
    <error message="Cannot invoke &quot;kong.unirest.JsonNode.toString()&quot; because the return value of &quot;kong.unirest.HttpResponse.getBody()&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "kong.unirest.JsonNode.toString()" because the return value of "kong.unirest.HttpResponse.getBody()" is null
	at org.wit.controllers.HealthTrackerAPITest$DeleteActivities.deleting an activity by id when it exists, returns a 204 response(HealthTrackerAPITest.kt:374)
</error>
    <system-err><![CDATA[[qtp1946988038-25] WARN io.javalin.Javalin - Uncaught exception
com.fasterxml.jackson.module.kotlin.MissingKotlinParameterException: Instantiation of [simple type, class org.wit.domain.UserDTO] value failed for JSON property full_name due to missing (therefore NULL) value for creator parameter full_name which is a non-nullable type
 at [Source: (String)"{"name":"XYZ", "email":"xyz@gmail.com"}"; line: 1, column: 39] (through reference chain: org.wit.domain.UserDTO["full_name"])
	at com.fasterxml.jackson.module.kotlin.KotlinValueInstantiator.createFromObjectWith(KotlinValueInstantiator.kt:44)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:198)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3188)
	at org.wit.controllers.HealthTrackerAPI.addUser(HealthTrackerAPI.kt:175)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:31)
	at org.wit.config.JavalinConfig$registerRoutes$1$2.invoke(JavalinConfig.kt:8)
	at org.wit.config.JavalinConfig$sam$io_javalin_http_Handler$0.handle(JavalinConfig.kt)
	at io.javalin.core.security.SecurityUtil.noopAccessManager(SecurityUtil.kt:23)
	at io.javalin.http.JavalinServlet$addHandler$protectedHandler$1.handle(JavalinServlet.kt:119)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:45)
	at io.javalin.http.JavalinServlet$service$2$1.invoke(JavalinServlet.kt:24)
	at io.javalin.http.JavalinServlet$service$1.invoke(JavalinServlet.kt:126)
	at io.javalin.http.JavalinServlet$service$2.invoke(JavalinServlet.kt:40)
	at io.javalin.http.JavalinServlet.service(JavalinServlet.kt:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:755)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:547)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1607)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at io.javalin.core.JavalinServer$start$httpHandler$1.doHandle(JavalinServer.kt:54)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:485)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1577)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1212)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:59)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:500)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:270)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:388)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]></system-err>
  </testcase>
</testsuite>